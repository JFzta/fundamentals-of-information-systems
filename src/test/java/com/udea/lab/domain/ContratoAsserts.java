package com.udea.lab.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ContratoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratoAllPropertiesEquals(Contrato expected, Contrato actual) {
        assertContratoAutoGeneratedPropertiesEquals(expected, actual);
        assertContratoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratoAllUpdatablePropertiesEquals(Contrato expected, Contrato actual) {
        assertContratoUpdatableFieldsEquals(expected, actual);
        assertContratoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratoAutoGeneratedPropertiesEquals(Contrato expected, Contrato actual) {
        assertThat(actual)
            .as("Verify Contrato auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratoUpdatableFieldsEquals(Contrato expected, Contrato actual) {
        assertThat(actual)
            .as("Verify Contrato relevant properties")
            .satisfies(a -> assertThat(a.getFechaInicio()).as("check fechaInicio").isEqualTo(expected.getFechaInicio()))
            .satisfies(a -> assertThat(a.getFechaFin()).as("check fechaFin").isEqualTo(expected.getFechaFin()))
            .satisfies(a -> assertThat(a.getLenguaje()).as("check lenguaje").isEqualTo(expected.getLenguaje()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertContratoUpdatableRelationshipsEquals(Contrato expected, Contrato actual) {
        assertThat(actual)
            .as("Verify Contrato relationships")
            .satisfies(a -> assertThat(a.getTrabajo()).as("check trabajo").isEqualTo(expected.getTrabajo()))
            .satisfies(a -> assertThat(a.getDepartamento()).as("check departamento").isEqualTo(expected.getDepartamento()))
            .satisfies(a -> assertThat(a.getEmpleado()).as("check empleado").isEqualTo(expected.getEmpleado()));
    }
}
